{"version":3,"sources":["utils.ts","EndSlide.tsx","PuzzlePiece.tsx","PuzzleGuide.tsx","Puzzle.tsx","StartSlide.tsx","Timer.tsx","LoadedApp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["QUERY_PARAMS","params","parse","window","location","search","parseBooleans","puzzle","Error","parentUrl","undefined","devMode","parseQueryParams","parseMilliseconds","milliseconds","minutes","Math","floor","round","constrainToAspectRatio","aspectRatio","width","height","ratio","EndSlide","title","subtitle","shareText","onRestart","shareUrl","decodeURIComponent","href","className","FacebookShareButton","url","quote","color","TwitterShareButton","EmailShareButton","openWindow","subject","onClick","PuzzlePiece","props","hoverColor","dragColor","state","dragging","hovering","handleMouseEnter","bind","handleMouseOut","pathEls","this","paths","map","path","index","d","fill","key","cursor","locked","svgRef","current","scale","dragScale","onStart","handleDragStart","onStop","handleDragStop","disabled","position","x","y","classnames","onMouseEnter","onMouseOut","setState","onDragStart","e","draggableData","onDragStop","React","PureComponent","PuzzleGuide","ref","createRef","getBoundingClientRect","Component","Puzzle","colorScale","chroma","domain","pieces","length","piece","originalPosition","transform","guideRef","pieceRef","tolerance","getDragScale","stage","guides","bboxGuide","viewBox","join","prevProps","slice","forEach","isPieceSolved","every","movePieceToFront","isAllSolved","onSolved","logPositions","positions","reduce","prev","curr","toFixed","console","log","JSON","stringify","StartSlide","Timer","time","seconds","minutesStr","secondsStr","formatTime","ASPECT_RATIO","LoadedApp","interval","data","startTime","Date","duration","dimensions","innerWidth","innerHeight","handleSolved","handleStart","handleRestart","handleTouchStart","handleResize","timeVerbose","parts","push","formatTimeVerbose","replace","document","addEventListener","setInterval","incrementTime","pymChild","pym","Child","getParentPositionInfo","onMessage","message","split","Number","sendHeight","removeEventListener","clearInterval","date","getTime","preventDefault","stopPropagation","App","responseType","configuration","fetching","failed","minX","minY","Object","entries","transforms","parseFloat","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57ae0c09.chunk.js","sourcesContent":["import { parse } from \"query-string\";\nimport {\n  PuzzleConfiguration,\n  Dimensions,\n  RawConfig,\n  QueryParams\n} from \"./types\";\n\nconst QUERY_PARAMS = parseQueryParams();\n\nfunction parseQueryParams(): QueryParams {\n  const params = parse(window.location.search, { parseBooleans: true });\n  if (!(params.puzzle && typeof params.puzzle === \"string\")) {\n    throw new Error(\"Puzzle not defined in the URL query string\");\n  }\n  return {\n    puzzle: params.puzzle,\n    parentUrl: (params.parentUrl === \"string\" && params.parentUrl) || undefined,\n    devMode:\n      (typeof params.devMode === \"boolean\" && params.devMode) || undefined\n  };\n}\n\nexport function getDevMode(): boolean {\n  return !!QUERY_PARAMS.devMode;\n}\n\nfunction parseMilliseconds(milliseconds: number): [number, number] {\n  const minutes = Math.floor(milliseconds / (1000 * 60));\n  const seconds = Math.round((milliseconds - minutes * 60 * 1000) / 1000);\n  return [minutes, seconds];\n}\n\nexport function formatTimeVerbose(milliseconds: number): string {\n  const [minutes, seconds] = parseMilliseconds(milliseconds);\n  const parts = [];\n  if (minutes === 1) {\n    parts.push(\"1 minute\");\n  } else if (minutes > 1) {\n    parts.push(`${minutes || 0} minutes`);\n  }\n  if (seconds === 1) {\n    parts.push(\"1 second\");\n  } else if (seconds > 1) {\n    parts.push(`${seconds || 0} seconds`);\n  }\n  return parts.join(\", \");\n}\n\nexport function formatTime(milliseconds: number): string {\n  const [minutes, seconds] = parseMilliseconds(milliseconds);\n  const minutesStr = minutes >= 10 ? `${minutes}` : `0${minutes}`;\n  const secondsStr = seconds >= 10 ? `${seconds}` : `0${seconds}`;\n  return `${minutesStr}:${secondsStr}`;\n}\n\nexport function getShareUrl(): string {\n  return typeof QUERY_PARAMS.parentUrl === \"string\"\n    ? decodeURIComponent(QUERY_PARAMS.parentUrl)\n    : window.location.href;\n}\n\nexport function getConfigUrl(): string {\n  return `puzzles/${QUERY_PARAMS.puzzle}.json`;\n}\n\nexport function parseConfig(configuration: RawConfig): PuzzleConfiguration {\n  return {\n    viewBox: [\n      configuration.viewBox.minX,\n      configuration.viewBox.minY,\n      configuration.viewBox.width,\n      configuration.viewBox.height\n    ],\n    pieces: Object.entries(configuration.paths).map(([key, paths]) => {\n      const [x, y] = configuration.transforms[key] || [\"0\", \"0\"];\n      return {\n        key,\n        paths,\n        transform: [parseFloat(x), parseFloat(y)]\n      };\n    }),\n    title: configuration.title,\n    shareText: configuration.shareText\n  };\n}\n\nexport function millisecondsSince(date: Date): number {\n  return Math.round(new Date().getTime() - date.getTime());\n}\n\nexport function constrainToAspectRatio(\n  { width, height }: Dimensions,\n  aspectRatio: number\n): Dimensions {\n  const ratio = width / height;\n\n  if (ratio > aspectRatio) {\n    // too wide\n    return {\n      height,\n      width: height * aspectRatio\n    };\n  } else if (ratio < aspectRatio) {\n    return {\n      height: width / aspectRatio,\n      width\n    };\n  } else {\n    return { width, height };\n  }\n}\n","import React from \"react\";\nimport { getShareUrl } from \"./utils\";\nimport {\n  FacebookShareButton,\n  TwitterShareButton,\n  EmailShareButton\n} from \"react-share\";\n\nimport { FaRedo, FaFacebookF, FaTwitter, FaRegEnvelope } from \"react-icons/fa\";\n\nexport const EndSlide: React.FunctionComponent<{\n  title: string;\n  subtitle: string;\n  shareText: string;\n  onRestart: () => any;\n}> = ({ title, subtitle, shareText, onRestart }) => {\n  const shareUrl = getShareUrl();\n  return (\n    <div className=\"slide fade-in\">\n      <div>\n        <h2>{title}</h2>\n        <p className=\"subtitle\">{subtitle}</p>\n        <div className=\"share-btns\">\n          <FacebookShareButton\n            className=\"puzzle-btn\"\n            url={shareUrl}\n            quote={shareText}\n          >\n            <FaFacebookF color=\"rgb(59, 89, 152)\" />\n            <span>Share</span>\n          </FacebookShareButton>\n          <TwitterShareButton\n            className=\"puzzle-btn\"\n            url={shareUrl}\n            title={shareText}\n          >\n            <FaTwitter color=\"rgb(64, 153, 255)\" />\n            Tweet\n          </TwitterShareButton>\n          <EmailShareButton\n            openWindow={true}\n            className=\"puzzle-btn\"\n            url={shareUrl}\n            subject={shareText}\n          >\n            <FaRegEnvelope color=\"rgb(106, 4, 50)\" />\n            Email\n          </EmailShareButton>\n        </div>\n        <div className=\"puzzle-btn\" onClick={onRestart}>\n          <FaRedo />\n          <span>Restart</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { Ref } from \"react\";\nimport Draggable, { DraggableData } from \"react-draggable\";\nimport classnames from \"classnames\";\nimport { createPortal } from \"react-dom\";\n\nexport class PuzzlePiece extends React.PureComponent<\n  {\n    paths: string[];\n    onDragStart: (index: number) => any;\n    onDragStop: (index: number, DraggableData) => any;\n    color: string;\n    locked: boolean;\n    dragScale: number;\n    position: [number, number];\n    index: number;\n    svgRef: Ref<SVGElement>;\n  },\n  {\n    color: string;\n    dragging: boolean;\n    hovering: boolean;\n  }\n> {\n  hoverColor: string;\n  dragColor: string;\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: this.props.color,\n      dragging: false,\n      hovering: false\n    };\n    this.hoverColor = \"rgb(100%, 100%, 44.1%)\";\n    this.dragColor = \"yellow\";\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleMouseOut = this.handleMouseOut.bind(this);\n  }\n  render() {\n    const pathEls = this.props.paths.map((path, index) => {\n      return (\n        <path\n          d={path}\n          className=\"puzzle-piece-path\"\n          fill={this.state.color}\n          key={index}\n          cursor={this.props.locked ? \"normal\" : \"move\"}\n        />\n      );\n    });\n    const svgRef =\n      typeof this.props.svgRef === \"object\" ? this.props.svgRef.current : null;\n    return (\n      <Draggable\n        scale={this.props.dragScale}\n        onStart={this.handleDragStart.bind(this)}\n        onStop={this.handleDragStop.bind(this)}\n        disabled={this.props.locked}\n        position={{ x: this.props.position[0], y: this.props.position[1] }}\n      >\n        <g\n          className={classnames({\n            \"puzzle-piece-group\": true,\n            dragging: this.state.dragging,\n            hovering: this.state.hovering\n          })}\n          onMouseEnter={this.handleMouseEnter}\n          onMouseOut={this.handleMouseOut}\n        >\n          <rect></rect>\n          {pathEls}\n        </g>\n      </Draggable>\n    );\n  }\n  handleMouseEnter() {\n    if (!this.state.dragging) {\n      this.setState({\n        hovering: true\n      });\n    }\n  }\n  handleMouseOut() {\n    if (!this.state.dragging) {\n      this.setState({\n        hovering: false\n      });\n    }\n  }\n  handleDragStart() {\n    this.setState({\n      dragging: true\n    });\n    this.props.onDragStart(this.props.index);\n  }\n  handleDragStop(e: MouseEvent, draggableData: DraggableData) {\n    this.setState({\n      dragging: false\n    });\n    this.props.onDragStop(this.props.index, draggableData);\n  }\n}\n","import React, { Ref } from \"react\";\nexport class PuzzleGuide extends React.Component<{\n  paths: string[];\n}> {\n  public ref: Ref<SVGGElement>;\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n  render() {\n    const pathEls = this.props.paths.map((path, index) => {\n      return <path className=\"puzzle-guide-path\" d={path} key={index} />;\n    });\n    return <g ref={this.ref}>{pathEls}</g>;\n  }\n  getBbox(): ClientRect | null {\n    const ref = this.ref;\n    if (typeof ref === \"object\" && ref && ref.current) {\n      return ref.current.getBoundingClientRect();\n    }\n  }\n}\n","import React, { Ref } from \"react\";\nimport chroma from \"chroma-js\";\nimport { PuzzlePiece } from \"./PuzzlePiece\";\nimport { PuzzleGuide } from \"./PuzzleGuide\";\nimport { Piece } from \"./types\";\nimport { DraggableData } from \"react-draggable\";\n\nexport class Puzzle extends React.PureComponent<\n  {\n    pieces: Piece[];\n    stage: \"initial\" | \"editing\" | \"end\";\n    viewBox: [number, number, number, number];\n    devMode?: boolean;\n    width: number;\n    height: number;\n    onSolved?: () => any;\n  },\n  {\n    pieces: {\n      key: string;\n      paths: string[];\n      color: string;\n      guideRef: Ref<PuzzleGuide>;\n      pieceRef: Ref<PuzzlePiece>;\n      position: [number, number];\n      originalPosition: [number, number];\n    }[];\n    tolerance: number;\n  }\n> {\n  private ref: Ref<SVGSVGElement>;\n  constructor(props) {\n    super(props);\n    const colorScale = chroma\n      .scale(\"Spectral\")\n      .domain([0, props.pieces.length], props.pieces.length);\n\n    this.state = {\n      pieces: props.pieces.map((piece, index) => ({\n        key: piece.key,\n        paths: piece.paths,\n        originalPosition: piece.transform,\n        position: piece.transform,\n        color: colorScale(index),\n        guideRef: React.createRef(),\n        pieceRef: React.createRef()\n      })),\n      tolerance: 30\n    };\n    this.ref = React.createRef();\n    this.handleDragStart = this.handleDragStart.bind(this);\n    this.handleDragStop = this.handleDragStop.bind(this);\n  }\n  render() {\n    const dragScale = this.getDragScale(this.props.width, this.props.height);\n    const pieces = this.state.pieces.map((piece, index) => (\n      <PuzzlePiece\n        index={index}\n        paths={piece.paths}\n        key={piece.key}\n        color={piece.color}\n        onDragStart={this.handleDragStart}\n        onDragStop={this.handleDragStop}\n        dragScale={dragScale}\n        ref={piece.pieceRef}\n        locked={this.props.stage === \"end\"}\n        position={piece.position}\n        svgRef={this.ref}\n      />\n    ));\n    const guides = this.state.pieces.map((piece, index) => (\n      <PuzzleGuide paths={piece.paths} ref={piece.guideRef} key={index} />\n    ));\n    const bboxGuide = this.props.devMode ? (\n      <rect\n        x={this.props.viewBox[0]}\n        y={this.props.viewBox[1]}\n        width={this.props.viewBox[2]}\n        height={this.props.viewBox[3]}\n      ></rect>\n    ) : null;\n    return (\n      <div className=\"puzzle\">\n        <svg\n          width={this.props.width}\n          height={this.props.height}\n          viewBox={this.props.viewBox.join(\" \")}\n          ref={this.ref}\n        >\n          {bboxGuide}\n          {guides}\n          {pieces}\n        </svg>\n      </div>\n    );\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.stage !== this.props.stage) {\n      switch (this.props.stage) {\n        case \"editing\":\n        case \"initial\":\n          this.setState({\n            pieces: this.state.pieces.map(piece => {\n              piece.position = piece.originalPosition;\n              return piece;\n            })\n          });\n          break;\n        case \"end\":\n          this.setState({\n            pieces: this.state.pieces.map(piece => {\n              piece.position = [0, 0];\n              return piece;\n            })\n          });\n          break;\n      }\n    }\n  }\n  getDragScale(width: number, height: number): number {\n    if (typeof this.ref !== \"object\") return;\n    const { viewBox } = this.props;\n    const viewPortAspectRatio = width / height;\n    const viewBoxAspectRatio = viewBox[2] / viewBox[3];\n    const heightLimited = viewPortAspectRatio > viewBoxAspectRatio;\n    const pixelsPerCoord = heightLimited\n      ? height / this.props.viewBox[3]\n      : width / this.props.viewBox[2];\n    return pixelsPerCoord;\n  }\n  movePieceToFront(index: number) {\n    if (index === this.state.pieces.length - 1) return;\n    this.setState({\n      pieces: [\n        ...this.state.pieces.slice(0, index),\n        ...this.state.pieces.slice(index + 1, this.state.pieces.length),\n        this.state.pieces[index]\n      ]\n    });\n  }\n  isPieceSolved(index: number): boolean {\n    const {\n      position: [x, y]\n    } = this.state.pieces[index];\n    const { tolerance } = this.state;\n    return x > -tolerance && x < tolerance && y > -tolerance && y < tolerance;\n  }\n  isAllSolved() {\n    this.state.pieces.forEach((piece, index) => this.isPieceSolved(index));\n    return this.state.pieces.every((piece, index) => this.isPieceSolved(index));\n  }\n  handleDragStart(index: number) {\n    this.movePieceToFront(index);\n  }\n  handleDragStop(index: number, e: DraggableData) {\n    const piece = this.state.pieces[index];\n    piece.position = [e.x, e.y];\n\n    this.setState({\n      pieces: [...this.state.pieces]\n    });\n\n    if (this.isAllSolved()) {\n      this.props.onSolved();\n    }\n    this.logPositions();\n  }\n  // for development\n  logPositions() {\n    if (!this.props.devMode) return;\n    const positions = this.state.pieces.reduce((prev, curr) => {\n      const position = curr.position;\n      if (position) {\n        const [x, y] = position;\n        prev[curr.key] = [x.toFixed(1), y.toFixed(1)];\n      }\n      return prev;\n    }, {});\n    console.log(JSON.stringify(positions));\n  }\n}\n","import React from \"react\";\n\nexport const StartSlide: React.FunctionComponent<{\n  title: string;\n  onStart: () => any;\n}> = props => {\n  return (\n    <div className=\"slide\">\n      <div>\n        <h2>{props.title}</h2>\n        <div className=\"puzzle-btn btn-start\" onClick={props.onStart}>\n          Start!\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { formatTime } from \"./utils\";\nimport { FaStopwatch } from \"react-icons/fa\";\n\nexport const Timer: React.FunctionComponent<{ time: number }> = ({ time }) => {\n  return (\n    <div className=\"timer\">\n      <FaStopwatch /> <span className=\"time\">{formatTime(time)}</span>\n    </div>\n  );\n};\n","import pym from \"pym.js\";\nimport React from \"react\";\nimport { FaRedo } from \"react-icons/fa\";\nimport \"./App.css\";\nimport { EndSlide } from \"./EndSlide\";\nimport { Puzzle } from \"./Puzzle\";\nimport { StartSlide } from \"./StartSlide\";\nimport { Timer } from \"./Timer\";\nimport { Dimensions, Piece, PuzzleConfiguration } from \"./types\";\nimport {\n  constrainToAspectRatio,\n  formatTimeVerbose,\n  millisecondsSince,\n  getDevMode\n} from \"./utils\";\n\nconst ASPECT_RATIO = 0.5;\n\nclass LoadedApp extends React.Component<\n  {\n    data: PuzzleConfiguration;\n  },\n  {\n    stage: \"start\" | \"puzzle\" | \"end\";\n    startTime: Date;\n    pieces: Piece[];\n    duration: number;\n    viewBox: [number, number, number, number];\n    title: string;\n    shareText: string;\n    dimensions: Dimensions;\n  }\n> {\n  public interval: NodeJS.Timeout;\n  constructor(props) {\n    super(props);\n    const { pieces, viewBox, title, shareText } = this.props.data;\n    this.state = {\n      pieces,\n      viewBox,\n      title,\n      shareText,\n      startTime: new Date(),\n      duration: 0,\n      stage: \"start\",\n      dimensions: {\n        width: window.innerWidth,\n        height: constrainToAspectRatio(\n          { width: window.innerWidth, height: window.innerHeight },\n          ASPECT_RATIO\n        ).height\n      }\n    };\n    this.handleSolved = this.handleSolved.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleRestart = this.handleRestart.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n  }\n  render() {\n    switch (this.state.stage) {\n      case \"start\":\n        return (\n          <div className=\"App\">\n            <StartSlide title={this.state.title} onStart={this.handleStart} />\n            <Puzzle\n              stage=\"initial\"\n              pieces={this.state.pieces}\n              viewBox={this.state.viewBox}\n              width={this.state.dimensions.width}\n              height={this.state.dimensions.height}\n            />\n          </div>\n        );\n      case \"puzzle\":\n        return (\n          <div className=\"App no-touch-action\">\n            <div className=\"top-bar\">\n              <Timer time={this.state.duration} />\n              <div className=\"puzzle-btn\" onClick={this.handleRestart}>\n                <FaRedo />\n                <span>Restart</span>\n              </div>\n            </div>\n            <Puzzle\n              stage=\"editing\"\n              onSolved={this.handleSolved}\n              pieces={this.state.pieces}\n              viewBox={this.state.viewBox}\n              width={this.state.dimensions.width}\n              height={this.state.dimensions.height}\n              devMode={getDevMode()}\n            />\n          </div>\n        );\n      case \"end\":\n        const timeVerbose = formatTimeVerbose(this.state.duration);\n        const shareText = this.state.shareText.replace(\"{time}\", timeVerbose);\n        return (\n          <div className=\"App\">\n            <EndSlide\n              title=\"Solved!\"\n              subtitle={`You solved the puzzle in ${timeVerbose}!`}\n              shareText={shareText}\n              onRestart={this.handleRestart}\n            />\n            <Puzzle\n              stage=\"end\"\n              pieces={this.state.pieces}\n              viewBox={this.state.viewBox}\n              width={this.state.dimensions.width}\n              height={this.state.dimensions.height}\n            />\n          </div>\n        );\n    }\n  }\n  componentDidMount() {\n    document.addEventListener(\"touchstart\", this.handleTouchStart);\n    this.interval = setInterval(() => this.incrementTime(), 1000);\n    const pymChild = new pym.Child();\n    pymChild.getParentPositionInfo();\n\n    pymChild.onMessage(\"viewport-iframe-position\", message => {\n      const [width, height] = message.split(\" \");\n      this.setState({\n        dimensions: {\n          width,\n          height: constrainToAspectRatio(\n            {\n              width: width,\n              height: Number(height)\n            },\n            ASPECT_RATIO\n          ).height\n        }\n      });\n      pymChild.sendHeight();\n    });\n  }\n  handleResize() {\n    window.addEventListener(\"resize\", () => {\n      const width = window.innerWidth;\n      this.setState({\n        dimensions: {\n          width,\n          height: constrainToAspectRatio(\n            {\n              width: width,\n              height: window.innerHeight\n            },\n            ASPECT_RATIO\n          ).height\n        }\n      });\n    });\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n    document.removeEventListener(\"touchstart\", this.handleTouchStart);\n    clearInterval(this.interval);\n  }\n  incrementTime() {\n    if (this.state.stage !== \"puzzle\") return;\n    this.setState({\n      duration: Math.round(millisecondsSince(this.state.startTime))\n    });\n  }\n  handleStart() {\n    this.setState({\n      startTime: new Date(),\n      stage: \"puzzle\"\n    });\n  }\n  handleSolved() {\n    this.setState({\n      stage: \"end\"\n    });\n  }\n  handleRestart() {\n    this.setState({\n      startTime: new Date(),\n      stage: \"start\",\n      duration: 0\n    });\n  }\n  handleTouchStart(e: TouchEvent) {\n    if (this.state.stage === \"puzzle\") {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n}\n\nexport default LoadedApp;\n","import LoadedApp from \"./LoadedApp\";\nimport React from \"react\";\nimport { Fetch } from \"react-request\";\nimport { getConfigUrl, parseConfig } from \"./utils\";\n\nclass App extends React.Component<{}, {}> {\n  render() {\n    return (\n      <Fetch url={getConfigUrl()} responseType=\"json\">\n        {({ fetching, failed, data }) => {\n          if (fetching) {\n            return <div>Loading puzzle...</div>;\n          } else if (failed) {\n            return <div>Failed to load puzzle. Please try again later.</div>;\n          } else if (data) {\n            return <LoadedApp data={parseConfig(data)}></LoadedApp>;\n          }\n          return null;\n        }}\n      </Fetch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}