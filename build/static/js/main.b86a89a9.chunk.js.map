{"version":3,"sources":["utils.ts","EndSlide.tsx","PuzzlePiece.tsx","PuzzleGuide.tsx","Puzzle.tsx","StartSlide.tsx","Timer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["parseMilliseconds","milliseconds","minutes","Math","floor","round","EndSlide","title","subtitle","shareText","onRestart","shareUrl","params","parse","window","location","search","decodeURIComponent","href","getShareUrl","className","FacebookShareButton","url","quote","TwitterShareButton","EmailShareButton","subject","onClick","PuzzlePiece","props","hoverColor","dragColor","state","color","dragging","hovering","handleMouseEnter","bind","handleMouseOut","pathEls","this","paths","map","path","index","d","fill","key","cursor","locked","scale","dragScale","onStart","handleDragStart","onStop","handleDragStop","disabled","position","x","y","classnames","onMouseEnter","onMouseOut","setState","onDragStart","e","draggableData","onDragStop","React","PureComponent","PuzzleGuide","ref","createRef","current","getBoundingClientRect","Component","Puzzle","resizeHandler","colorScale","chroma","domain","pieces","length","piece","originalPosition","transform","guideRef","pieceRef","tolerance","handleResize","stage","guides","bboxGuide","devMode","viewBox","width","height","innerWidth","innerHeight","join","prevProps","refreshDragScale","addEventListener","removeEventListener","forceUpdate","svgBbox","pixelsPerCoord","slice","forEach","isPieceSolved","every","movePieceToFront","isAllSolved","onSolved","logPositions","positions","reduce","prev","curr","toFixed","console","log","JSON","stringify","StartSlide","Timer","time","seconds","minutesStr","secondsStr","formatTime","App","interval","configuration","minX","minY","Object","entries","transforms","parseFloat","startTime","Date","duration","handleSolved","handleStart","handleRestart","handleTouchStart","timeVerbose","parts","push","formatTimeVerbose","replace","document","setInterval","incrementTime","clearInterval","date","getTime","preventDefault","stopPropagation","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b86a89a9.chunk.js","sourcesContent":["import { parse } from \"query-string\";\nimport configuration from \"../src/districts/la.json\";\nimport { PuzzleConfiguration } from \"./types\";\n\nfunction parseMilliseconds(milliseconds: number): [number, number] {\n  const minutes = Math.floor(milliseconds / (1000 * 60));\n  const seconds = Math.round((milliseconds - minutes * 60 * 1000) / 1000);\n  return [minutes, seconds];\n}\n\nexport function formatTimeVerbose(milliseconds: number): string {\n  const [minutes, seconds] = parseMilliseconds(milliseconds);\n  const parts = [];\n  if (minutes === 1) {\n    parts.push(\"1 minute\");\n  } else if (minutes > 1) {\n    parts.push(`${minutes || 0} minutes`);\n  }\n  if (seconds === 1) {\n    parts.push(\"1 second\");\n  } else if (seconds > 1) {\n    parts.push(`${seconds || 0} seconds`);\n  }\n  return parts.join(\", \");\n}\n\nexport function formatTime(milliseconds: number): string {\n  const [minutes, seconds] = parseMilliseconds(milliseconds);\n  const minutesStr = minutes >= 10 ? `${minutes}` : `0${minutes}`;\n  const secondsStr = seconds >= 10 ? `${seconds}` : `0${seconds}`;\n  return `${minutesStr}:${secondsStr}`;\n}\n\nexport function getShareUrl(): string {\n  const params = parse(window.location.search);\n  return typeof params.shareUrl === \"string\"\n    ? decodeURIComponent(params.shareUrl)\n    : window.location.href;\n}\n\nexport function getData(): PuzzleConfiguration {\n  return {\n    viewBox: [\n      configuration.viewBox.minX,\n      configuration.viewBox.minY,\n      configuration.viewBox.width,\n      configuration.viewBox.height\n    ],\n    pieces: Object.entries(configuration.paths).map(([key, paths]) => {\n      const [x, y] = configuration.transforms[key] || [\"0\", \"0\"];\n      return {\n        key,\n        paths,\n        transform: [parseFloat(x), parseFloat(y)]\n      };\n    }),\n    title: configuration.title,\n    shareText: configuration.shareText\n  };\n}\n\nexport function millisecondsSince(date: Date): number {\n  return Math.round(new Date().getTime() - date.getTime());\n}\n","import React from \"react\";\nimport { getShareUrl } from \"./utils\";\nimport {\n  FacebookShareButton,\n  TwitterShareButton,\n  EmailShareButton\n} from \"react-share\";\n\nimport { FaRedo, FaFacebookF, FaTwitter, FaRegEnvelope } from \"react-icons/fa\";\n\nexport const EndSlide: React.FunctionComponent<{\n  title: string;\n  subtitle: string;\n  shareText: string;\n  onRestart: () => any;\n}> = ({ title, subtitle, shareText, onRestart }) => {\n  const shareUrl = getShareUrl();\n  return (\n    <div className=\"slide\">\n      <div>\n        <h2>{title}</h2>\n        <p className=\"subtitle\">{subtitle}</p>\n        <div className=\"share-btns\">\n          <FacebookShareButton\n            className=\"puzzle-btn\"\n            url={shareUrl}\n            quote={shareText}\n          >\n            <FaFacebookF />\n            <span>Share</span>\n          </FacebookShareButton>\n          <TwitterShareButton\n            className=\"puzzle-btn\"\n            url={shareUrl}\n            title={shareText}\n          >\n            <FaTwitter />\n            Tweet\n          </TwitterShareButton>\n          <EmailShareButton\n            className=\"puzzle-btn\"\n            url={shareUrl}\n            subject={shareText}\n          >\n            <FaRegEnvelope />\n            Email\n          </EmailShareButton>\n        </div>\n        <div className=\"puzzle-btn\" onClick={onRestart}>\n          <FaRedo />\n          <span>Restart</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Draggable, { DraggableData } from \"react-draggable\";\nimport classnames from \"classnames\";\n\nexport class PuzzlePiece extends React.PureComponent<\n  {\n    paths: string[];\n    onDragStart: (index: number) => any;\n    onDragStop: (index: number, DraggableData) => any;\n    color: string;\n    locked: boolean;\n    dragScale: number;\n    position: [number, number];\n    index: number;\n  },\n  {\n    color: string;\n    dragging: boolean;\n    hovering: boolean;\n  }\n> {\n  hoverColor: string;\n  dragColor: string;\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: this.props.color,\n      dragging: false,\n      hovering: false\n    };\n    this.hoverColor = \"rgb(100%, 100%, 44.1%)\";\n    this.dragColor = \"yellow\";\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleMouseOut = this.handleMouseOut.bind(this);\n  }\n  render() {\n    const pathEls = this.props.paths.map((path, index) => {\n      return (\n        <path\n          d={path}\n          className=\"puzzle-piece-path\"\n          fill={this.state.color}\n          key={index}\n          cursor={this.props.locked ? \"normal\" : \"move\"}\n        />\n      );\n    });\n    return (\n      <Draggable\n        scale={this.props.dragScale}\n        onStart={this.handleDragStart.bind(this)}\n        onStop={this.handleDragStop.bind(this)}\n        disabled={this.props.locked}\n        position={{ x: this.props.position[0], y: this.props.position[1] }}\n      >\n        <g\n          className={classnames({\n            \"puzzle-piece-group\": true,\n            dragging: this.state.dragging,\n            hovering: this.state.hovering\n          })}\n          onMouseEnter={this.handleMouseEnter}\n          onMouseOut={this.handleMouseOut}\n        >\n          {pathEls}\n        </g>\n      </Draggable>\n    );\n  }\n  handleMouseEnter() {\n    this.setState({\n      hovering: true\n    });\n  }\n  handleMouseOut() {\n    this.setState({\n      hovering: false\n    });\n  }\n  handleDragStart() {\n    this.setState({\n      dragging: true\n    });\n    this.props.onDragStart(this.props.index);\n  }\n  handleDragStop(e: MouseEvent, draggableData: DraggableData) {\n    this.setState({\n      dragging: false\n    });\n    this.props.onDragStop(this.props.index, draggableData);\n  }\n}\n","import React, { Ref } from \"react\";\nexport class PuzzleGuide extends React.Component<{\n  paths: string[];\n}> {\n  public ref: Ref<SVGGElement>;\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n  render() {\n    const pathEls = this.props.paths.map((path, index) => {\n      return <path className=\"puzzle-guide-path\" d={path} key={index} />;\n    });\n    return <g ref={this.ref}>{pathEls}</g>;\n  }\n  getBbox(): ClientRect | null {\n    const ref = this.ref;\n    if (typeof ref === \"object\" && ref && ref.current) {\n      return ref.current.getBoundingClientRect();\n    }\n  }\n}\n","import React, { Ref } from \"react\";\nimport chroma from \"chroma-js\";\nimport { PuzzlePiece } from \"./PuzzlePiece\";\nimport { PuzzleGuide } from \"./PuzzleGuide\";\nimport { Piece } from \"./types\";\nimport { DraggableData } from \"react-draggable\";\n\nexport class Puzzle extends React.PureComponent<\n  {\n    pieces: Piece[];\n    stage: \"initial\" | \"editing\" | \"end\";\n    viewBox: [number, number, number, number];\n    devMode?: boolean;\n    onSolved?: () => any;\n  },\n  {\n    pieces: {\n      key: string;\n      paths: string[];\n      color: string;\n      guideRef: Ref<PuzzleGuide>;\n      pieceRef: Ref<PuzzlePiece>;\n      position: [number, number];\n      originalPosition: [number, number];\n    }[];\n    dragScale: number; // number of pixels per svg unit\n    tolerance: number;\n  }\n> {\n  private ref: Ref<SVGSVGElement>;\n  private resizeHandler?: (...args: any[]) => any;\n  constructor(props) {\n    super(props);\n    const colorScale = chroma\n      .scale(\"Spectral\")\n      .domain([0, props.pieces.length], props.pieces.length);\n\n    this.state = {\n      pieces: props.pieces.map((piece, index) => ({\n        key: piece.key,\n        paths: piece.paths,\n        originalPosition: piece.transform,\n        position: piece.transform,\n        color: colorScale(index),\n        guideRef: React.createRef(),\n        pieceRef: React.createRef()\n      })),\n      dragScale: 1,\n      tolerance: 1000\n    };\n    this.ref = React.createRef();\n    this.handleDragStart = this.handleDragStart.bind(this);\n    this.handleDragStop = this.handleDragStop.bind(this);\n    this.resizeHandler = this.handleResize.bind(this);\n  }\n  render() {\n    const pieces = this.state.pieces.map((piece, index) => (\n      <PuzzlePiece\n        index={index}\n        paths={piece.paths}\n        key={piece.key}\n        color={piece.color}\n        onDragStart={this.handleDragStart}\n        onDragStop={this.handleDragStop}\n        dragScale={this.state.dragScale}\n        ref={piece.pieceRef}\n        locked={this.props.stage === \"end\"}\n        position={piece.position}\n      />\n    ));\n    const guides = this.state.pieces.map((piece, index) => (\n      <PuzzleGuide paths={piece.paths} ref={piece.guideRef} key={index} />\n    ));\n    const bboxGuide = this.props.devMode ? (\n      <rect\n        x={this.props.viewBox[0]}\n        y={this.props.viewBox[1]}\n        width={this.props.viewBox[2]}\n        height={this.props.viewBox[3]}\n      ></rect>\n    ) : null;\n    return (\n      <div className=\"Puzzle\">\n        <svg\n          width={window.innerWidth}\n          height={window.innerHeight}\n          viewBox={this.props.viewBox.join(\" \")}\n          ref={this.ref}\n        >\n          {bboxGuide}\n          {guides}\n          {pieces}\n        </svg>\n      </div>\n    );\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.stage !== this.props.stage) {\n      switch (this.props.stage) {\n        case \"editing\":\n        case \"initial\":\n          this.setState({\n            pieces: this.state.pieces.map(piece => {\n              piece.position = piece.originalPosition;\n              return piece;\n            })\n          });\n          break;\n        case \"end\":\n          this.setState({\n            pieces: this.state.pieces.map(piece => {\n              piece.position = [0, 0];\n              return piece;\n            })\n          });\n          break;\n      }\n    }\n  }\n  componentDidMount() {\n    this.refreshDragScale();\n    window.addEventListener(\"resize\", this.resizeHandler);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeHandler);\n  }\n  handleResize() {\n    this.forceUpdate(); // re-render first b/c to compute drag scale we need to render new dimensions\n    this.refreshDragScale();\n  }\n  refreshDragScale() {\n    if (typeof this.ref !== \"object\") return;\n    const { viewBox } = this.props;\n    const svgBbox = this.ref.current.getBoundingClientRect();\n    const viewPortAspectRatio = svgBbox.width / svgBbox.height;\n    const viewBoxAspectRatio = viewBox[2] / viewBox[3];\n    const heightLimited = viewPortAspectRatio > viewBoxAspectRatio;\n    const pixelsPerCoord = heightLimited\n      ? svgBbox.height / this.props.viewBox[3]\n      : svgBbox.width / this.props.viewBox[2];\n    this.setState({\n      dragScale: pixelsPerCoord\n    });\n  }\n  movePieceToFront(index: number) {\n    if (index === this.state.pieces.length - 1) return;\n    this.setState({\n      pieces: [\n        ...this.state.pieces.slice(0, index),\n        ...this.state.pieces.slice(index + 1, this.state.pieces.length),\n        this.state.pieces[index]\n      ]\n    });\n  }\n  isPieceSolved(index: number): boolean {\n    const {\n      position: [x, y]\n    } = this.state.pieces[index];\n    const { tolerance } = this.state;\n    return x > -tolerance && x < tolerance && y > -tolerance && y < tolerance;\n  }\n  isAllSolved() {\n    this.state.pieces.forEach((piece, index) => this.isPieceSolved(index));\n    return this.state.pieces.every((piece, index) => this.isPieceSolved(index));\n  }\n  handleDragStart(index: number) {\n    this.movePieceToFront(index);\n  }\n  handleDragStop(index: number, e: DraggableData) {\n    const piece = this.state.pieces[index];\n    piece.position = [e.x, e.y];\n\n    this.setState({\n      pieces: [...this.state.pieces]\n    });\n\n    if (this.isAllSolved()) {\n      this.props.onSolved();\n    }\n    this.logPositions();\n  }\n  // for development\n  logPositions() {\n    if (!this.props.devMode) return;\n    const positions = this.state.pieces.reduce((prev, curr) => {\n      const position = curr.position;\n      if (position) {\n        const [x, y] = position;\n        prev[curr.key] = [x.toFixed(1), y.toFixed(1)];\n      }\n      return prev;\n    }, {});\n    console.log(JSON.stringify(positions));\n  }\n}\n","import React from \"react\";\n\nexport const StartSlide: React.FunctionComponent<{\n  title: string;\n  onStart: () => any;\n}> = props => {\n  return (\n    <div className=\"slide\">\n      <div>\n        <h2>{props.title}</h2>\n        <div className=\"puzzle-btn\" onClick={props.onStart}>\n          Start\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { formatTime } from \"./utils\";\n\nexport const Timer: React.FunctionComponent<{ time: number }> = ({ time }) => {\n  return <div className=\"timer\">{formatTime(time)}</div>;\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { EndSlide } from \"./EndSlide\";\nimport { Puzzle } from \"./Puzzle\";\nimport { StartSlide } from \"./StartSlide\";\nimport { Timer } from \"./Timer\";\nimport { Piece } from \"./types\";\nimport { formatTimeVerbose, getData, millisecondsSince } from \"./utils\";\n\nclass App extends React.Component<\n  {},\n  {\n    stage: \"start\" | \"puzzle\" | \"end\";\n    startTime: Date;\n    pieces: Piece[];\n    duration: number;\n    viewBox: [number, number, number, number];\n    title: string;\n    shareText: string;\n  }\n> {\n  public interval: NodeJS.Timeout;\n  constructor(props) {\n    super(props);\n    const { pieces, viewBox, title, shareText } = getData();\n    this.state = {\n      pieces,\n      viewBox,\n      title,\n      shareText,\n      startTime: new Date(),\n      duration: 0,\n      stage: \"start\"\n    };\n    this.handleSolved = this.handleSolved.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleRestart = this.handleRestart.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n  }\n  render() {\n    switch (this.state.stage) {\n      case \"start\":\n        return (\n          <div className=\"App\">\n            <StartSlide title={this.state.title} onStart={this.handleStart} />\n            <Puzzle\n              stage=\"initial\"\n              pieces={this.state.pieces}\n              viewBox={this.state.viewBox}\n            />\n          </div>\n        );\n      case \"puzzle\":\n        return (\n          <div className=\"App\">\n            <Timer time={this.state.duration} />\n            <Puzzle\n              stage=\"editing\"\n              onSolved={this.handleSolved}\n              pieces={this.state.pieces}\n              viewBox={this.state.viewBox}\n            />\n          </div>\n        );\n      case \"end\":\n        const timeVerbose = formatTimeVerbose(this.state.duration);\n        const shareText = this.state.shareText.replace(\"{time}\", timeVerbose);\n        return (\n          <div className=\"App\">\n            <EndSlide\n              title=\"Solved!\"\n              subtitle={`You solved the puzzle in ${timeVerbose}!`}\n              shareText={shareText}\n              onRestart={this.handleRestart}\n            />\n            <Puzzle\n              stage=\"end\"\n              pieces={this.state.pieces}\n              viewBox={this.state.viewBox}\n            />\n          </div>\n        );\n    }\n  }\n  componentDidMount() {\n    document.addEventListener(\"touchstart\", this.handleTouchStart);\n    this.interval = setInterval(() => this.incrementTime(), 1000);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"touchstart\", this.handleTouchStart);\n    clearInterval(this.interval);\n  }\n  incrementTime() {\n    if (this.state.stage !== \"puzzle\") return;\n    this.setState({\n      duration: Math.round(millisecondsSince(this.state.startTime))\n    });\n  }\n  handleStart() {\n    this.setState({ stage: \"puzzle\" });\n  }\n  handleSolved() {\n    this.setState({\n      stage: \"end\"\n    });\n  }\n  handleRestart() {\n    this.setState({\n      startTime: new Date(),\n      stage: \"puzzle\",\n      duration: 0\n    });\n  }\n  handleTouchStart(e: TouchEvent) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}